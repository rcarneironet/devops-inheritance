parameters:
- name: buildConfiguration
  type: string
- name: restoreBuildProjects
  type: string  

variables:
  - name: buildConfiguration
    value: '${{ parameters.buildConfiguration }}'
  - name: restoreBuildProjects
    value: '${{ parameters.restoreBuildProjects }}'

stages:
- stage: DEV
  displayName: Publish to Dev
  jobs:
    - job: Build_and_Publish
      pool: 
        vmImage: ubuntu-latest
      steps:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '**/*.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: True

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()
- stage: QA
  dependsOn: DEV
  displayName: Publish to QA
  jobs:
    - job: Build_and_Publish
      pool: 
        vmImage: ubuntu-latest
      steps:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '**/*.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: True

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()        
